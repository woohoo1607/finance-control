{"version":3,"sources":["components/Home/AddTransaction.module.css","components/Category/AddCategory.module.css","components/Category/Category.module.css","components/Header/logo.jpg","components/Home/TransactionCard/TransactionCard.js","components/FormsControls/FormsControls.js","validators/validators.js","components/Home/AddTransaction.js","components/Home/Home.js","reducers/homeReducer.js","components/Home/HomeContainer.js","components/Category/CategoryCard/EditCategoryCard.js","components/Category/CategoryCard/CategoryCard.js","components/Category/AddCategory.js","components/Category/Category.js","components/Category/CategoryContainer.js","components/Header/Navbar.js","components/Header/Header.js","App.js","store/store.js","index.js","components/FormsControls/FormsControls.module.css","components/Category/CategoryCard/CategoryCard.module.css","components/Home/TransactionCard/TransactionCard.module.css","components/Home/Home.module.css","components/Category/CategoryCard/EditCategoryCard.module.css"],"names":["module","exports","TransactionCard","props","className","refill","styles","incoming","spending","category","sum","Input","input","meta","formControl","touched","error","Select","reqiredField","value","numbers","isNaN","Number","AddReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","transForm","Field","name","component","placeholder","validate","map","key","id","type","AddTransaction","categArr","categoryType","formData","categoryAdd","find","item","categoryId","addData","Home","countBalance","start","end","data","balance","this","home","length","finance","transaction","reverse","React","Component","initialState","isFetching","filmsReducer","state","action","allId","newId","Math","max","apply","newCategory","objIndex","findIndex","obj","splice","newData","HomeContainer","connect","setInvoice","withRouter","EditCategoryReduxForm","categoryForm","inputs","uniqueCategorys","index","onClick","cancel","EditCategoryCard","copyUniqueCategorys","selfCategory","selfUniqueCategorys","put","initialValues","deactivatedEditMode","CategoryCard","editMode","activatedEditMode","isActiveEdit","activeteEdit","setState","deactiveteEdit","putCat","putCategory","delCat","deleteCategory","prevProps","prevState","e","AddCategoryReduxForm","AddCategory","addCategory","Category","filter","self","indexOf","categorys","CategoryContainer","Navbar","to","Header","src","Logo","width","height","alt","App","exact","path","render","reducers","combineReducers","homeReducer","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.877803a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transForm\":\"AddTransaction_transForm__1o0YK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoryForm\":\"AddCategory_categoryForm__Z_ckp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categorys\":\"Category_categorys__31Ce8\"};","module.exports = __webpack_public_path__ + \"static/media/logo.972ddd4d.jpg\";","import React from 'react';\nimport styles from './TransactionCard.module.css';\n\nconst TransactionCard = (props) => {\n    return (\n            <div className={props.refill ? styles.incoming : styles.spending}>\n                <p>{props.category}: </p>\n                {props.refill && <p>+{props.sum} грн.</p>}\n                {!props.refill && <p>-{props.sum} грн.</p>}\n            </div>\n            \n            )\n}\n\nexport default TransactionCard;\n","import React from 'react';\nimport styles from \"./FormsControls.module.css\"\n\n\nexport const Input = ({input, meta, ...props}) => {\n    return (\n            <div className={styles.formControl + \" \" + (meta.touched && meta.error ? styles.error : \"\")}>\n                <input {...input} {...props} />\n                { meta.touched && meta.error && <span> ! </span>}\n            </div>\n    );\n};\n\nexport const Select = ({input, meta, ...props}) => {\n    return (\n            <div className={styles.formControl + \" \" + (meta.touched && meta.error ? styles.error : \"\")}>\n                <select {...input} {...props} />\n                { meta.touched && meta.error && <span> ! </span>}\n            </div>\n    );\n};","\nexport const reqiredField = value => {\n    if (value) return undefined;\n    return \"Field is required\";\n};\n\nexport const numbers = value => {\n    if (value && isNaN(Number(value))) return 'Must be a number';\n    return undefined;\n};","import React from 'react';\nimport {reduxForm, reset, Field} from \"redux-form\";\nimport {Input, Select} from \"../FormsControls/FormsControls\";\nimport {reqiredField, numbers} from \"../../validators/validators\";\nimport styles from './AddTransaction.module.css';\n\n\nconst AddForm = (props) => {\n\n    return (\n            <form onSubmit={props.handleSubmit} >\n                <div className={styles.transForm}>\n                <Field name=\"category\" component={Select} placeholder=\"Category\" validate = {[reqiredField]}>\n                    <option></option>\n                    {props.category.map(category=> <option key={category.id}>{category.name}</option>)}\n                </Field>\n                    <Field name=\"sum\" component={Input} placeholder=\"Sum\" validate = {[reqiredField, numbers]} />\n                    <button type=\"submit\">Add</button>\n                </div>\n                                               \n            </form>\n\n            );\n};\nconst afterSubmit = (result, dispatch) =>\n  dispatch(reset('addForm'));\n\nconst AddReduxForm = reduxForm({form: 'addForm', onSubmitSuccess:afterSubmit})(AddForm);\n\nconst AddTransaction = (props) => {\n\n    const onSubmit = (formData) => {\n        formData.sum = +formData.sum;\n        let categoryAdd = categArr.find(item=> item.name==formData.category);\n        formData.categoryId = categoryAdd.id\n        props.addData(formData);\n    };\n    let categArr = props.category.map(category =>{\n        let name;\n        let id;\n        if (category.categoryType === \"incoming\") {\n            name = \"+\" + category.name;\n            id = category.id;\n            return {id, name};\n        } else {\n            name = \"-\" + category.name;\n            id = category.id;\n            return {id, name};\n        }\n    });\n\n    return (\n            <div>\n                <AddReduxForm onSubmit={onSubmit} category={categArr}/>\n            </div>\n            );\n};\n\nexport default AddTransaction;","import React from 'react';\nimport TransactionCard from './TransactionCard/TransactionCard';\nimport AddTransaction from './AddTransaction';\nimport styles from './Home.module.css';\n//import Preloader from \"../Preloader\";\n\nclass Home extends React.Component {\n\ncountBalance = (start, end, data, result) => {\n    if(start>end)\n        return result;\n    if (data[start].refill) {\n        result=result+data[start].sum;\n    } else {\n        result=result-data[start].sum;\n    }\n    return this.countBalance(start+1, end, data, result);\n}\n\nrender() {\n    let result=0;\n    var balance = this.countBalance(0, (this.props.home.data.length-1), this.props.home.data, result);\n\n        return (\n            <div className=\"center\">\n                <AddTransaction addData={this.props.addData} category={this.props.home.category}/>\n                <div className={styles.balance}>\n                    <p>Balance:</p>\n                    <p>{balance} грн.</p>\n                </div>\n                <div className={styles.finance}>\n                    {this.props.home.data.map(transaction => <TransactionCard key={transaction.id} refill={transaction.refill}\n                    category={transaction.category} sum={transaction.sum} />).reverse()}\n                </div>\n            </div>\n            );\n\n};\n};\n\nexport default Home;\n","//import {filmsAPI} from \"../api/api\";\n\nconst SET_INVOICE = \"SET_INVOICE\";\nconst ADD_DATA = \"ADD_DATA\";\nconst ADD_CATEGORY = \"ADD_CATEGORY\";\nconst PUT_CATEGORY = \"PUT_CATEGORY\";\nconst DELETE_CATEGORY = \"DELETE_CATEGORY\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\n\n\nlet initialState = {\n    data: [{id: 0, refill: true, category: \"The salary\", sum: 12000},\n           {id: 1, refill: false, category: \"Film\", sum: 400},\n           {id: 2, refill: false, category: \"Food\", sum: 300},\n           {id: 3, refill: false, category: \"Clothes\", sum: 730}],\n    category: [{id: 0, name: \"Food\", categoryType: \"spending\"},\n               {id: 1, name: \"The salary\", categoryType:\"incoming\"},\n               {id: 2, name: \"Film\", categoryType:\"spending\"},\n               {id: 3, name: \"Clothes\", categoryType:\"spending\"}],\n    isFetching: false\n};\n\nconst filmsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        \n        case SET_INVOICE:\n        {\n            return {\n                ...state,\n                data: [...action.data]\n            };\n        }\n        case ADD_CATEGORY:\n        {\n            let allId = [...state.category.map(id => id=id.id)];\n            let newId = Math.max.apply(Math, allId)+1;\n            action.category.id = newId;\n\n            return {\n                ...state,\n                category: [...state.category, ...[action.category]]\n            };\n        }\n        case PUT_CATEGORY:\n        {\n            let newCategory = [...state.category];\n            let objIndex = newCategory.findIndex(obj => obj.id === action.category.id);\n            newCategory[objIndex].name = action.category.name;\n            newCategory[objIndex].categoryType = action.category.categoryType;\n            return {\n                ...state,\n                category: [...newCategory]\n            };\n        }\n        case DELETE_CATEGORY:\n        {\n            let newCategory = [...state.category];\n            let objIndex = newCategory.findIndex(obj => obj.id === action.category);\n            newCategory.splice(objIndex, 1);\n            return {\n                ...state,\n                category: [...newCategory]\n            };\n        }\n        case ADD_DATA:\n        {   \n            let newData = {};\n            let category = state.category.find(item => item.id === action.data.categoryId);\n            let allId = [...state.data.map(id => id=id.id)];\n            let newId = Math.max.apply(Math, allId)+1;\n            newData.id = newId;\n            newData.sum = action.data.sum;\n            newData.category = category.name;\n            if (category.categoryType === \"spending\") {\n                newData.refill = false;\n            } else {\n                newData.refill = true;\n            }\n\n            return {\n                ...state,\n                data: [...state.data, ...[newData]]\n            };\n        }\n        case TOGGLE_IS_FETCHING:\n        {\n            return {\n                ...state, isFetching: action.isFetching\n            };\n        }\n        default:\n            return state;\n}\n};\n\nexport const setInvoice = (data) =>\n    ({type: SET_INVOICE, data: data});\n\nexport const addData = (data) =>\n    ({type: ADD_DATA, data: data});\n\nexport const addCategory = (category) =>\n    ({type: ADD_CATEGORY, category: category});\n\nexport const putCategory = (category) =>\n    ({type: PUT_CATEGORY, category: category});\n\nexport const deleteCategory = (category) =>\n    ({type: DELETE_CATEGORY, category: category});\n\nexport const toggleIsFetching = (isFetching) =>\n    ({type: TOGGLE_IS_FETCHING, isFetching});\n\n/*export const getFilms = (currentPage) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        filmsAPI.getFilms(currentPage).then(response => {\n            dispatch(toggleIsFetching(false));\n            dispatch(setFilms(response.results));\n            dispatch(setCurrentPage(response.page));\n            dispatch(setTotalPages(response.total_pages));\n        });  \n    };\n};\n*/\n\nexport default filmsReducer;","import React from 'react';\nimport Home from './Home';\nimport {setInvoice, addData} from \"../../reducers/homeReducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\n\nclass HomeContainer extends React.Component {\n\n    \n /*   componentDidUpdate (prevProps, prevState) {\n        if (prevProps.match.params.page !== this.props.match.params.page) {\n            this.props.getFilms(this.props.match.params.page);\n            window.scrollTo(0,0);\n        }\n    }*/\n    \n   /* componentDidMount() {\n        if (this.props.match.params.page) {\n            this.props.getFilms(this.props.match.params.page);\n        } else {\n            this.props.getFilms();\n        }\n        if (this.props.match.params.req) {\n            this.props.searchFilms(this.props.match.params.req);\n        }\n    }   */\n\n\n    render() {\n     /*   let searching = false;\n        if (this.props.match.path === \"/search/:req\") {\n            if (this.props.match.params.req) {\n                searching = true;\n                console.log(this.props.match.params.req);\n            } else {\n                searching = false;\n            }\n        }*/\n        \n        return (\n                <Home home={this.props.home}\n                      addData={this.props.addData}/>\n                \n                )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        home: state.home\n    };\n};\n\n\n\nexport default connect(mapStateToProps, {setInvoice, addData})(withRouter(HomeContainer));\n","import React from 'react';\nimport {reduxForm, Field, reset} from \"redux-form\";\nimport {Input, Select} from \"../../FormsControls/FormsControls\";\nimport {reqiredField} from \"../../../validators/validators\";\nimport styles from './EditCategoryCard.module.css';\n\n\nconst EditCategoryForm = (props) => {\n\n    return (\n            <form onSubmit={props.handleSubmit} >\n                <div className={styles.categoryForm}>\n                    <div className={styles.inputs}>\n                        <Field name=\"name\" component={Input} placeholder=\"Name\" validate = {[reqiredField]} />\n                        <Field name=\"categoryType\" component={Select} placeholder=\"CategoryType\" validate = {[reqiredField]}>\n                            {props.uniqueCategorys.map((category, index)=> <option key={index}>{category}</option>)}\n                        </Field>\n                    </div>\n                    <button type=\"submit\">Save</button>\n                    <button onClick = {()=> {props.cancel()}}>Cancel</button>\n                </div>\n                                               \n            </form>\n\n            );\n};\n\n\nconst EditCategoryReduxForm = reduxForm({form: 'editCategoryForm'})(EditCategoryForm);\n\nconst EditCategoryCard = (props) => {\n      \n    let copyUniqueCategorys = [...props.uniqueCategorys];\n    let objIndex = copyUniqueCategorys.findIndex(obj => obj === props.categoryType);\n    let selfCategory = copyUniqueCategorys.splice(objIndex,1);\n    let selfUniqueCategorys = [...selfCategory, ...copyUniqueCategorys];\n\n    const onSubmit = (formData) => {\n        formData.id = props.id;\n        props.put(formData);\n    };\n    \n\n    return (\n            <div>\n                <EditCategoryReduxForm onSubmit={onSubmit} \n                                       initialValues={{name: props.name, categoryType: selfCategory[0]}}\n                                       cancel={props.deactivatedEditMode}\n                                       uniqueCategorys={selfUniqueCategorys}/>\n            </div>\n            );\n};\n\nexport default EditCategoryCard;","import React from 'react';\nimport styles from './CategoryCard.module.css';\nimport EditCategoryCard from './EditCategoryCard';\n\n\nclass CategoryCard extends React.Component {\n     \n    state ={\n        editMode: false,\n        data: {\n            id: this.props.id,\n            name: this.props.name\n        }\n    }\n    \n    componentDidUpdate (prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.setState({\n                data: {\n                    id: this.props.id,\n                    name: this.props.name\n                }\n            });\n        }\n    }\n    \n    activatedEditMode = () => {\n        if (!this.props.isActiveEdit) {\n            this.props.activeteEdit();\n            this.setState({\n                editMode: true\n            });\n        };\n    }\n    \n    deactivatedEditMode = () => {\n        this.props.deactiveteEdit();\n        this.setState({\n            editMode: false\n        });\n    }\n    \n    putCat = (data) => {\n        this.deactivatedEditMode();\n        this.props.putCategory(data);\n    };\n    delCat = (id) => {\n        this.props.deleteCategory(id);\n    };\n    render () {\n    return (\n            <div>\n            {this.state.editMode && \n                <div className={styles.category}>    \n                    <EditCategoryCard name={this.state.data.name} \n                                      id={this.state.data.id}\n                                      put={this.putCat}\n                                      categoryType={this.props.categoryType}\n                                      deactivatedEditMode={this.deactivatedEditMode}\n                                      uniqueCategorys={this.props.uniqueCategorys}\n                                      />\n                </div>}\n            {!this.state.editMode && <div className={styles.category}>\n                {this.props.categoryType === \"spending\" && <p className={styles.spending}>{this.props.name}</p>}\n                {this.props.categoryType === \"incoming\" && <p className={styles.incoming}>{this.props.name}</p>}\n                <button onClick={e => {this.activatedEditMode()}}>Edit</button>\n                <button onClick={e => {this.delCat(this.props.id)}}>Delete</button>\n            </div>}\n            </div>\n            )\n   }\n}\n\nexport default CategoryCard;\n","import React from 'react';\nimport {reduxForm, reset, Field} from \"redux-form\";\nimport {Input} from \"../FormsControls/FormsControls\";\nimport {reqiredField} from \"../../validators/validators\";\nimport styles from './AddCategory.module.css';\n\n\nconst AddCategoryForm = (props) => {\n\n    return (\n            <form onSubmit={props.handleSubmit} >\n                <div className={styles.categoryForm}>\n                    <Field name=\"name\" component={Input} placeholder=\"Name\" validate = {[reqiredField]} />\n                    <p>Is it income?</p><Field name=\"categoryType\" component={Input} placeholder=\"Type\" type=\"checkbox\" />\n                    <button type=\"submit\">Add</button>\n                </div>\n                                               \n            </form>\n\n            );\n};\n\nconst afterSubmit = (result, dispatch) =>\n  dispatch(reset('addCategoryForm'));\n\nconst AddCategoryReduxForm = reduxForm({form: 'addCategoryForm', onSubmitSuccess:afterSubmit})(AddCategoryForm);\n\nconst AddCategory = (props) => {\n\n    const onSubmit = (formData) => {\n        if(!formData.categoryType){\n            formData.categoryType = \"spending\";\n        } else {\n            formData.categoryType = \"incoming\";\n        }\n        props.addCategory(formData);\n    };\n    \n\n    return (\n            <div>\n                <AddCategoryReduxForm onSubmit={onSubmit} />\n            </div>\n            );\n};\n\nexport default AddCategory;","import React from 'react';\nimport CategoryCard from './CategoryCard/CategoryCard';\nimport AddCategory from './AddCategory';\nimport styles from './Category.module.css';\n//import Preloader from \"../Preloader\";\n\nclass Category extends React.Component {\n\n    state = {\n        isActiveEdit: false\n    };\n    \n    activeteEdit = () => {\n        this.setState( {\n            isActiveEdit: true\n        });\n    }\n    \n    deactiveteEdit = () => {\n        this.setState( {\n            isActiveEdit: false\n        });\n    }\n\nrender() {\n    let allCategorys = this.props.home.category.map(category => {\n        return category.categoryType;\n    });\n    function a (value, index, self) {\n        return self.indexOf(value) === index;\n    }\n    let uniqueCategorys = allCategorys.filter(a);\n    \n    return (\n            <div className=\"center\">\n                <AddCategory  addCategory={this.props.addCategory}/>\n                <div className={styles.categorys}>\n                    {this.props.home.category.map(category => <CategoryCard key={category.id} id={category.id} name={category.name}\n                    categoryType={category.categoryType} putCategory={this.props.putCategory}\n                    deleteCategory={this.props.deleteCategory} uniqueCategorys={uniqueCategorys}\n                    isActiveEdit={this.state.isActiveEdit} activeteEdit={this.activeteEdit}\n                    deactiveteEdit={this.deactiveteEdit}/>).reverse()}\n                </div>\n            </div>\n            );\n\n};\n};\n\nexport default Category;\n","import React from 'react';\nimport Category from './Category';\nimport {addCategory, putCategory, deleteCategory} from \"../../reducers/homeReducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\n\nclass CategoryContainer extends React.Component {\n\n     render() {\n\n        return (\n                <Category home={this.props.home}\n                          addCategory={this.props.addCategory}\n                          putCategory={this.props.putCategory}\n                          deleteCategory={this.props.deleteCategory}/>\n                \n                )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        home: state.home\n    };\n};\n\n\n\nexport default connect(mapStateToProps, {addCategory, putCategory, deleteCategory})(withRouter(CategoryContainer));\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\"; \nimport styles from \"./Navbar.module.css\"\n\nconst Navbar = () => {\n    return (\n            <nav>\n                <ul>\n                    <li><NavLink to=\"/\">Transaction</NavLink></li>\n                    <li><NavLink to=\"/category\">Category</NavLink></li>\n                </ul>\n            </nav>\n            )\n}\n\nexport default Navbar;\n","import React from 'react';\nimport Navbar from './Navbar';\nimport {NavLink} from \"react-router-dom\"; \nimport Logo from \"./logo.jpg\";\n\nconst Header = () => {\n    return (\n            <div className=\"center\">\n                <header>\n                    <NavLink to='/' className='logo'>\n                        <img src={Logo} width='70' height='50' alt=\"logo\"/>\n                    </NavLink>\n                    <Navbar />\n                    <div className=\"clr\"></div>\n                </header>\n            </div>\n            )\n}\n\nexport default Header;\n","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport './App.css';\nimport HomeContainer from './components/Home/HomeContainer';\nimport CategoryContainer from './components/Category/CategoryContainer';\nimport Header from './components/Header/Header';\n\nfunction App() {\n     return (\n                <div className=\"App\">\n                    <Header />\n                    <Route exact path='/' render = { () => <HomeContainer /> } />\n                    <Route exact path='/category' render = { () => <CategoryContainer /> } />\n                </div>\n\n            );\n}\n\nexport default App;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport homeReducer from \"../reducers/homeReducer\"\nimport thunkMiddleware from \"redux-thunk\"\nimport {reducer as formReducer} from \"redux-form\"\n\nlet reducers = combineReducers({\n    home: homeReducer,\n    form: formReducer\n\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport store from './store/store';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n        <HashRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>    \n        </HashRouter>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3NsSX\",\"error\":\"FormsControls_error__JmqJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category\":\"CategoryCard_category__3TiqZ\",\"spending\":\"CategoryCard_spending__3ZTke\",\"incoming\":\"CategoryCard_incoming__3U3-j\",\"button\":\"CategoryCard_button__Nv38-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spending\":\"TransactionCard_spending__3jkuf\",\"incoming\":\"TransactionCard_incoming__2YaKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"finance\":\"Home_finance__1q9vF\",\"balance\":\"Home_balance__3HGtK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoryForm\":\"EditCategoryCard_categoryForm__2qgqF\",\"text\":\"EditCategoryCard_text__2JkUg\",\"check\":\"EditCategoryCard_check__1-nNp\",\"inputs\":\"EditCategoryCard_inputs__2uySI\"};"],"sourceRoot":""}